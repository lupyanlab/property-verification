require(lme4)
df <- read.csv("./feature-last.csv")
acc.ftype <- glmer(is_correct ~ feature_C * mask_C + (feature_C * mask_C|subj_id),
data = df, family = "binomial")
acc.ftype <- glmer(is_correct ~ ftype_C * mask_C + (ftype_C * mask_C|subj_id),
data = df, family = "binomial")
summary(acc.ftype)
df[df$truth_agree == TRUE, ]
acc.ftype <- glmer(is_correct ~ ftype_C * mask_C + (ftype_C * mask_C|subj_id),
data = df[df$truth_agree == TRUE, ], family = "binomial")
summary(acc.ftype)
length(unique(df$subj_id))
nrow(df[df$truth_agree == TRUE, ])
names(df)
require(dplyr)
require(car)
source("./helper/helper-funcs.R") # import `%nin%` function for filtering
df <- read.csv("./data/mwpf2-corrected.csv")
# merge norming ratings
norms <- read.csv("./feature-norms/feature_norms.csv")
df <- merge(df, norms, all.x = T)
df <- read.csv("./feature-last.csv")
require(dplyr)
df <- read.csv("./data/mwpf2-2014-05-05.csv")
# two response columns: truth coded for feedback, and the subjs response
df <- plyr::rename(df, c("response" = "truth_coded", "response.1" = "response"))
norms <- read.csv("./feature-norms/feature_norms.csv")
norms <- norms %.%
select(cue, ftype, qid, question, truth_coded, # cols to merge on
truth_normed, truth_agree)              # cols to add
df <- merge(df, norms, all.x = T)
require(dplyr)
df <- read.csv("./data/mwpf2-2014-05-05.csv")
require(dplyr)
require(car)
source("./helper/helper-funcs.R") # import `%nin%` function for filtering
df <- read.csv("./data/mwpf2-corrected.csv")
# merge norming ratings
norms <- read.csv("./feature-norms/feature_norms.csv")
df <- merge(df, norms, all.x = T)
# clean data
invalid_subjs <- c("MWPF214")  # slow response times and < 80% accuracy
df <- df %.%
mutate(
rt = ifelse(is_correct == 0, NA, rt),
is_correct = ifelse(response == "timeout", NA, is_correct)
) %.%
filter(
block_ix != -1,             # remove practice trials
subj_id %nin% invalid_subjs # `%nin%` is the opposite of `%in%`
) %.%
select(subj_id, block_ix, trial_ix,
cue, cue_mask,
ftype, qid, question,
truth_coded, truth_normed, truth_agree,
imagery_mean, imagery_z,
facts_mean, facts_z,
difficulty_mean, difficulty_z,
response, rt, is_correct) %.%
arrange(subj_id, block_ix, trial_ix)
df$ftype_C <- recode(df$ftype, "'nonvisual'=-0.5; 'visual'=0.5")
df$mask_C <- recode(df$cue_mask, "'nomask'=-0.5; 'mask'=0.5")
write.csv(df, file = "./feature-last/feature-last.csv", row.names = FALSE)
require(dplyr)
require(car)
source("./helper/helper-funcs.R") # import `%nin%` function for filtering
require(dplyr)
df <- read.csv("./data/mwpf2-2014-05-05.csv")
# two response columns: truth coded for feedback, and the subjs response
df <- plyr::rename(df, c("response" = "truth_coded", "response.1" = "response"))
# recode here:
zebra_jaws <- (df$cue == 'zebra') & (df$question == "Does it have jaws?")
df[zebra_jaws, "is_correct"] <- ifelse(df[zebra_jaws, 'response'] == "yes", 1, 0)
write.csv(df, file = "./feature-last/1-mwpf2-corrected.csv", row.names = F)
df <- read.csv("./data/mwpf2-2014-05-05.csv")
